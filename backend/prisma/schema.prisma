datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id  Int @id @default(autoincrement())
    name String
    email String @unique
    password String
    role String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    
    // Relations with Club
    facultyCoordinatedClubs Club[] @relation("FacultyCoordinator")
    presidentOfClubs Club[] @relation("President")
    vicePresidentOfClubs Club[] @relation("VicePresident")

    // Relations with EventRegistration
    eventRegistrations EventRegistration[] @relation("EventRegistrations")

    // Relations with AuditLog
    auditLogs AuditLog[] @relation("AuditLogs")
}

model Club {
    id Int @id @default(autoincrement())
    name String
    type String
    faculty_coordinator User @relation("FacultyCoordinator", fields: [faculty_coordinator_id], references: [id])
    president User @relation("President", fields: [president_id], references: [id])
    vice_president User @relation("VicePresident", fields: [vice_president_id], references: [id])
    budget Float
    logo String
    no_of_members Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    status String
    faculty_coordinator_id Int
    president_id Int
    vice_president_id Int

    // Relations with Event
    events Event[] @relation("Events")
}

model Event {
    id Int @id @default(autoincrement())
    name String
    type String
    owner_club Club @relation("Events",fields: [owner_club_id], references: [id])
    venue String
    date DateTime
    time String
    requirements Json
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    owner_club_id Int
    status String
    rejection_reason String
    budget Float
    revenue_generated Float

    // Relation with EventRegistration
    eventRegistrations EventRegistration[] @relation("Events")
}

model EventRegistration {
    id Int @id @default(autoincrement())
    user User @relation("EventRegistrations", fields: [user_id], references: [id])
    event Event @relation("Events", fields: [event_id], references: [id])
    role String
    createdAt DateTime @default(now())
    user_id Int
    event_id Int

    
}

model AuditLog {
    id Int @id @default(autoincrement())
    action String
    performed_by User @relation("AuditLogs", fields: [performed_by_id], references: [id])
    entity_type String
    entity_id Int
    old_data Json
    new_data Json
    createdAt DateTime @default(now())
    performed_by_id Int
}